# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'huanshuyemian.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import bjjs
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem,QMessageBox
from connect import *
import  pymysql
from datetime import datetime, timedelta
cursor,conn=connect()     #连接数据库

class Ui_huanshumian(object):
    def setupUi(self, huanshumian):
        huanshumian.setObjectName("huanshumian")
        huanshumian.resize(709, 515)
        self.centralwidget = QtWidgets.QWidget(huanshumian)
        self.centralwidget.setObjectName("centralwidget")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(0, -120, 711, 591))
        self.listWidget.setStyleSheet("border-image: url(:/唐小天.jpg);")
        self.listWidget.setObjectName("listWidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(200, 190, 302, 61))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.ISBN = QtWidgets.QLineEdit(self.layoutWidget)
        self.ISBN.setMinimumSize(QtCore.QSize(300, 40))
        self.ISBN.setObjectName("ISBN")
        self.verticalLayout.addWidget(self.ISBN)
        self.gh = QtWidgets.QPushButton(self.centralwidget)
        self.gh.setGeometry(QtCore.QRect(250, 370, 200, 70))
        self.gh.setMinimumSize(QtCore.QSize(200, 70))
        self.gh.setObjectName("gh")
        self.sm = QtWidgets.QLineEdit(self.centralwidget)
        self.sm.setGeometry(QtCore.QRect(200, 280, 300, 40))
        self.sm.setMinimumSize(QtCore.QSize(300, 40))
        self.sm.setObjectName("sm")
        huanshumian.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(huanshumian)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 709, 26))
        self.menubar.setObjectName("menubar")
        huanshumian.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(huanshumian)
        self.statusbar.setObjectName("statusbar")
        huanshumian.setStatusBar(self.statusbar)

        self.loginID = self.getreaderid()
        self.retranslateUi(huanshumian)
        QtCore.QMetaObject.connectSlotsByName(huanshumian)
        self.gh.clicked.connect(self.guihuan)

    def retranslateUi(self, huanshumian):
        _translate = QtCore.QCoreApplication.translate
        huanshumian.setWindowTitle(_translate("huanshumian", "MainWindow"))
        self.ISBN.setPlaceholderText(_translate("huanshumian", "ISBN号："))
        self.gh.setToolTip(_translate("huanshumian", "<html><head/>"
                                                     "<body><p><br/></p></body></html>"))
        self.gh.setText(_translate("huanshumian", "归还"))
        self.sm.setPlaceholderText(_translate("huanshumian", "书名："))

    # 获取当前读者ID
    def getreaderid(self):
        nowtime = time.strftime("%Y-%m-%d", time.localtime())
        sql = 'SELECT * FROM login_record where 日期 = "%s" order by 单日登录次数' % nowtime
        cursor.execute(sql)
        todaylogin = cursor.fetchall()
        readerlogin = todaylogin[-1]
        ID = readerlogin[0]
        return ID

    def guihuan(self):
        bookid = self.ISBN.text()
        bookname = self.sm.text()
        if bookname == '' and bookid == '':
            QMessageBox.warning(self, "警告", "请输入ISBN号/书名！", QMessageBox.Yes)
        elif bookid == '':
            sql = 'select * from books where 书名="%s"' % (bookname)
            res = cursor.execute(sql)
            bookinfo = cursor.fetchall()
            if res:
                bookid = bookinfo[0][0]
                sql = 'SELECT * from borrow_record ' \
                      'where ISBN=%s and 读者ID=%s' % (bookid, self.loginID)
                res = cursor.execute(sql)
                borrowinfo = cursor.fetchall()
                if res:
                    borrowtime = borrowinfo[0][2]
                    nowtime = time.strftime("%Y-%m-%d", time.localtime())
                    sql = 'SELECT * FROM items where ID="%s" and ISBN="%s" ' \
                          'and 借书时间="%s" and 还书时间="%s"' % (
                        self.loginID, bookid, borrowtime, nowtime)
                    res = cursor.execute(sql)
                    if res:
                        QMessageBox.warning(self, "警告", "请勿重复提交！", QMessageBox.Yes)
                    else:
                        sql = 'INSERT INTO items(ISBN,ID,借书时间,type,还书时间) ' \
                              'VALUES ("%s","%s","%s","return","%s")' % (
                            bookid, self.loginID, borrowtime, nowtime)
                        cursor.execute(sql)
                        conn.commit()
                        QMessageBox.warning(self, "提示", "提交成功！", QMessageBox.Yes)
                else:
                    QMessageBox.warning(self, "警告", "您未借过这本书！", QMessageBox.Yes)
            else:
                QMessageBox.warning(self, "警告", "书号输入错误！请重新输入！", QMessageBox.Yes)
        elif bookname == '':
            sql = 'SELECT * FROM books where ISBN号="%s"' % (bookid)
            res = cursor.execute(sql)
            if res:
                sql = 'SELECT * from borrow_record where ISBN=%s and 读者ID=%s' % (bookid, self.loginID)
                res = cursor.execute(sql)
                borrowinfo = cursor.fetchall()
                if res:
                    borrowtime = borrowinfo[0][2]
                    nowtime = time.strftime("%Y-%m-%d", time.localtime())
                    sql = 'SELECT * FROM items where ID="%s" and ISBN="%s" ' \
                          'and 借书时间="%s" and 还书时间="%s"' % (
                    self.loginID, bookid, borrowtime, nowtime)
                    res = cursor.execute(sql)
                    if res:
                        QMessageBox.warning(self, "警告", "请勿重复提交！", QMessageBox.Yes)
                    else:
                        sql = 'INSERT INTO items(ISBN,ID,借书时间,type,还书时间) ' \
                              'VALUES ("%s","%s","%s","return","%s")' % (
                        bookid, self.loginID, borrowtime, nowtime)
                        cursor.execute(sql)
                        conn.commit()
                        QMessageBox.warning(self, "提示", "提交成功！", QMessageBox.Yes)
                else:
                    QMessageBox.warning(self, "警告", "您未借过这本书！", QMessageBox.Yes)
            else:
                QMessageBox.warning(self, "警告", "书号输入错误！请重新输入！", QMessageBox.Yes)
        else:
            sql = 'SELECT * FROM books where ISBN号="%s" and 书名="%s"' % (bookid,bookname)
            res = cursor.execute(sql)
            if res:
                sql = 'SELECT * from borrow_record ' \
                      'where ISBN=%s and 读者ID=%s' % (bookid, self.loginID)
                res = cursor.execute(sql)
                borrowinfo = cursor.fetchall()
                if res:
                    borrowtime = borrowinfo[0][2]
                    nowtime = time.strftime("%Y-%m-%d", time.localtime())
                    sql = 'SELECT * FROM items where ID="%s" ' \
                          'and ISBN="%s" and 借书时间="%s" and 还书时间="%s"' % (
                        self.loginID, bookid, borrowtime, nowtime)
                    res = cursor.execute(sql)
                    if res:
                        QMessageBox.warning(self, "警告", "请勿重复提交！", QMessageBox.Yes)
                    else:
                        sql = 'INSERT INTO items(ISBN,ID,借书时间,type,还书时间) ' \
                              'VALUES ("%s","%s","%s","return","%s")' % (
                            bookid, self.loginID, borrowtime, nowtime)
                        cursor.execute(sql)
                        conn.commit()
                        QMessageBox.warning(self, "提示", "提交成功！", QMessageBox.Yes)
                else:
                    QMessageBox.warning(self, "警告", "您未借过这本书！", QMessageBox.Yes)
            else:
                QMessageBox.warning(self, "警告", "ISBN号与书名不匹配！请重新输入！", QMessageBox.Yes)